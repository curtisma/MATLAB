%---------------------------------------------------
% Ce programme est la propriete exclusive de SUPELEC
% Tout  usage  non  authorise  ou reproduction de ce
% programme est strictement defendu. 
% Copyright  (c) 2010  SUPELEC  Departement SSE
% Tous droits reserves
%---------------------------------------------------
%
% fichier : create_vhdl_model_smash.m
% auteur  : P.BENABES & C.TUGUI 
% Copyright (c) 2010 SUPELEC
% Revision: 2.0  Date: 29/10/2010
%
%---------------------------------------------------
%
% DESCRIPTION DU MODULE :
%   
%
% MODULES UTILISES :
%
%---------------------------------------------------
function filepath_vhd=create_vhdl_model_smash(vhdl_model_par,model_in_out,multi_in_out,filepath_vhd)
% Create vhdl model starting from extracted characteristics

% Open or create the vhd and the pat file:

if isempty(filepath_vhd)
    filename = strcat('VHDL/Models/', vhdl_model_par.subcell, '.vhd');
    [file,path] = uiputfile('*.vhd', 'Extract VHDL-AMS Model -> write .vhd and associated .pat', filename);
    if (file(1)~=0)&&(path(1)~=0)
        [vhd_name,vhd_ext]=strtok(file, '.');

        filepath_vhd=[path file];
        filepath_pat=[path vhd_name '.pat'];

        fid = fopen(filepath_vhd, 'w');
        fid_pat = fopen(filepath_pat, 'w');
    else
        return
    end
else
    fid = fopen(filepath_vhd, 'w');
    [vhd_name,vhd_ext]=strtok(filepath_vhd, '.');
    file=[vhd_name '.vhd'];
    filepath_pat=[vhd_name '.pat'];
    fid_pat = fopen(filepath_pat, 'w');
end

%Number of outputs
no=vhdl_model_par.numout;

%Create generic .pat file
fprintf(fid_pat, '%s\n', '*---------------------------------------');
fprintf(fid_pat, '%s\n', '*-- Generated by SIMECT');
fprintf(fid_pat, '%s', '*-- Generated on: ');
fprintf(fid_pat, '%s\n', datestr(now));
fprintf(fid_pat, '%s\n', '*---------------------------------------');
fprintf(fid_pat, '%s\n', '');
fprintf(fid_pat, '%s\n', '*Set language kind to VHDL''AMS');
fprintf(fid_pat, '%s\n', '.VHDL SET KIND=AMS');
fprintf(fid_pat, '%s\n', '');
fprintf(fid_pat, '%s\n', '* Compile the VHDL source into the work library');
fprintf(fid_pat, '.VHDL COMPILE LIBRARY=WORK SOURCE=%s\n', file);
fprintf(fid_pat, '%s\n', '');
fprintf(fid_pat, '%s\n', '* Elaborate the VHDL top-level');
fprintf(fid_pat, '%s\n', '.VHDL elaborate entity=Top_circuit unit=test ');
fprintf(fid_pat, '%s\n', '');
fprintf(fid_pat, '%s\n', '* Perform generic TRAN analysis');
fprintf(fid_pat, '%s\n', '.TRAN 1ns 20us 0s');
fprintf(fid_pat, '%s\n', '');
fprintf(fid_pat, '%s\n', '* Settings');
fprintf(fid_pat, '%s\n', '.H 1.000E-030s 1.000E-030s 10ns 250m 2');
fprintf(fid_pat, '%s\n', '.TOLERANCE DEFAULT_TOLERANCE 1u');
fprintf(fid_pat, '%s\n', '.TOLERANCE DEFAULT_CURRENT 2e-07');
fprintf(fid_pat, '%s\n', '.TOLERANCE DEFAULT_VOLTAGE 1m');
fprintf(fid_pat, '%s\n', '.METHOD TRAP');


%Create model .vhd file
% Write the first lines:
fprintf(fid, '%s\n', '---------------------------------------');
fprintf(fid, '%s\n', '-- Generated by SIMECT');
fprintf(fid, '%s', '-- Generated on: ');
fprintf(fid, '%s\n', datestr(now));
fprintf(fid, '%s\n', '---------------------------------------');
fprintf(fid, '%s\n', '');
fprintf(fid, '%s\n', 'LIBRARY IEEE;');
fprintf(fid, '%s\n', 'USE IEEE.electrical_systems.all;');
fprintf(fid, '%s\n', 'use IEEE.math_real.all;');
fprintf(fid, '%s\n', 'USE work.all;');
fprintf(fid, '%s\n', '');
fprintf(fid, 'ENTITY %s IS\n', vhdl_model_par.subcell);
fprintf(fid, '%s\n', '');

if vhdl_model_par.nlin
    
    
%     fprintf(fid, '%s\n', '  PORT    (TERMINAL P1, P2, N1, N2: ELECTRICAL);');
%     fprintf(fid, '%s\n', '');
%     fprintf(fid, 'END ENTITY %s;\n', vhdl_model_par.subcell);
%     fprintf(fid, '%s\n', '');
%     fprintf(fid, 'ARCHITECTURE behavioral OF %s IS\n', vhdl_model_par.subcell);
%     fprintf(fid, '%s\n', '');
%     
%     fprintf(fid, '%s', '  CONSTANT C0 : REAL := ');
%     fprintf(fid, '%f;\n', multi_in_out.dir_dc.c0);
%     % TBD: import all nonlinear coefficients from multi_in_out
%     
%     fprintf(fid, '%s\n', '');
%     fprintf(fid, '%s\n', '  QUANTITY Vin ACROSS Iin THROUGH ground TO P;');
%     fprintf(fid, '%s\n', '  QUANTITY Vout ACROSS Iout THROUGH ground TO N;');
%     
%     % Models
%     
%     % TBD: implement nonlinear behavior for VCVS CCVS CCCS VCCS
    
else
    
    %Add supply, gnd and other terminals
    
    fprintf(fid, '%s','  PORT    (TERMINAL ');
    
    if vhdl_model_par.gen_sources
        if vhdl_model_par.gen_supply
            fprintf(fid, '%s',[strrep(vhdl_model_par.alim_Vname,'net_','') ',']);
        end
    end
    
    if ~isempty(vhdl_model_par.gnd)
        fprintf(fid, '%s',[strrep(vhdl_model_par.gnd,'net_','') ',']);
    end
    
    for i=1:size(vhdl_model_par.in_Vname,2)
        fprintf(fid, '%s',[strrep(vhdl_model_par.in_Vname{i},'net_','') ',']);
    end
    
    for i=1:size(vhdl_model_par.out_Vname,2)-1
        fprintf(fid, '%s',[strrep(vhdl_model_par.out_Vname{i},'net_','') ',']);
    end
    
    fprintf(fid, '%s\n',  [strrep(vhdl_model_par.out_Vname{size(vhdl_model_par.out_Vname,2)},'net_','') ': ELECTRICAL);']);
    
    fprintf(fid, '%s\n', '');
    fprintf(fid, 'END ENTITY %s;\n', vhdl_model_par.subcell);
    fprintf(fid, '%s\n', '');
    fprintf(fid, 'ARCHITECTURE behavioral OF %s IS\n', vhdl_model_par.subcell);
    fprintf(fid, '%s\n', '');
    
    
    if vhdl_model_par.mode_diff_enabled
        
        if vhdl_model_par.mode_diff_enabled_out %IN diff OUT diff
            
            % Copy the parameters:
            
            for i=1:no
                
                if strcmp(vhdl_model_par.model_name, 'VCVS') % V in V out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD2
                    model_in_out{i}.TF_dir2=decomp_write_tf_vhdl(0,fid,i,'TF_dir2',model_in_out{i}.Num_TF_dir2,model_in_out{i}.Den_TF_dir2,0);
                    
                    % TFD3
                    model_in_out{i}.TF_dir3=decomp_write_tf_vhdl(0,fid,i,'TF_dir3',model_in_out{i}.Num_TF_dir3,model_in_out{i}.Den_TF_dir3,0);
                    
                    % TFD4
                    model_in_out{i}.TF_dir4=decomp_write_tf_vhdl(0,fid,i,'TF_dir4',model_in_out{i}.Num_TF_dir4,model_in_out{i}.Den_TF_dir4,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR2
                        model_in_out{i}.TF_inv2=decomp_write_tf_vhdl(0,fid,i,'TF_inv2',model_in_out{i}.Num_TF_inv2,model_in_out{i}.Den_TF_inv2,0);
                        
                        % TFR3
                        model_in_out{i}.TF_inv3=decomp_write_tf_vhdl(0,fid,i,'TF_inv3',model_in_out{i}.Num_TF_inv3,model_in_out{i}.Den_TF_inv3,0);
                        
                        % TFR4
                        model_in_out{i}.TF_inv4=decomp_write_tf_vhdl(0,fid,i,'TF_inv4',model_in_out{i}.Num_TF_inv4,model_in_out{i}.Den_TF_inv4,0);
                        
                    end
                    
                    % Zin1
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,1);
                    
                    % Zin2
                    model_in_out{i}.Zin2=decomp_write_tf_vhdl(0,fid,i,'Zin2',model_in_out{i}.Num_Zin2,model_in_out{i}.Den_Zin2,1);
                    
                    % Zin_diff1
                    model_in_out{i}.Zin_diff1=decomp_write_tf_vhdl(0,fid,i,'Zin_diff1',model_in_out{i}.Num_Zin_diff1,model_in_out{i}.Den_Zin_diff1,1);
                    
                    % Zin_diff2
                    model_in_out{i}.Zin_diff2=decomp_write_tf_vhdl(0,fid,i,'Zin_diff2',model_in_out{i}.Num_Zin_diff2,model_in_out{i}.Den_Zin_diff2,1);
                    
                    % Zout1
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,0);
                    
                    % Zout2
                    model_in_out{i}.Zout2=decomp_write_tf_vhdl(0,fid,i,'Zout2',model_in_out{i}.Num_Zout2,model_in_out{i}.Den_Zout2,0);
                    
                    % Zout_diff1
                    model_in_out{i}.Zout_diff1=decomp_write_tf_vhdl(0,fid,i,'Zout_diff1',model_in_out{i}.Num_Zout_diff1,model_in_out{i}.Den_Zout_diff1,0);
                    
                    % Zout_diff2
                    model_in_out{i}.Zout_diff2=decomp_write_tf_vhdl(0,fid,i,'Zout_diff2',model_in_out{i}.Num_Zout_diff2,model_in_out{i}.Den_Zout_diff2,0);
                    
                    
                elseif strcmp(vhdl_model_par.model_name, 'CCVS') % I in V out verified
                    
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD2
                    model_in_out{i}.TF_dir2=decomp_write_tf_vhdl(0,fid,i,'TF_dir2',model_in_out{i}.Num_TF_dir2,model_in_out{i}.Den_TF_dir2,0);
                    
                    % TFD3
                    model_in_out{i}.TF_dir3=decomp_write_tf_vhdl(0,fid,i,'TF_dir3',model_in_out{i}.Num_TF_dir3,model_in_out{i}.Den_TF_dir3,0);
                    
                    % TFD4
                    model_in_out{i}.TF_dir4=decomp_write_tf_vhdl(0,fid,i,'TF_dir4',model_in_out{i}.Num_TF_dir4,model_in_out{i}.Den_TF_dir4,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR2
                        model_in_out{i}.TF_inv2=decomp_write_tf_vhdl(0,fid,i,'TF_inv2',model_in_out{i}.Num_TF_inv2,model_in_out{i}.Den_TF_inv2,0);
                        
                        % TFR3
                        model_in_out{i}.TF_inv3=decomp_write_tf_vhdl(0,fid,i,'TF_inv3',model_in_out{i}.Num_TF_inv3,model_in_out{i}.Den_TF_inv3,0);
                        
                        % TFR4
                        model_in_out{i}.TF_inv4=decomp_write_tf_vhdl(0,fid,i,'TF_inv4',model_in_out{i}.Num_TF_inv4,model_in_out{i}.Den_TF_inv4,0);
                        
                    end
                    
                    % Zin1
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,0);
                    
                    % Zin2
                    model_in_out{i}.Zin2=decomp_write_tf_vhdl(0,fid,i,'Zin2',model_in_out{i}.Num_Zin2,model_in_out{i}.Den_Zin2,0);
                    
                    % Zin_diff1
                    model_in_out{i}.Zin_diff1=decomp_write_tf_vhdl(0,fid,i,'Zin_diff1',model_in_out{i}.Num_Zin_diff1,model_in_out{i}.Den_Zin_diff1,0);
                    
                    % Zin_diff2
                    model_in_out{i}.Zin_diff2=decomp_write_tf_vhdl(0,fid,i,'Zin_diff2',model_in_out{i}.Num_Zin_diff2,model_in_out{i}.Den_Zin_diff2,0);
                    
                    % Zout1
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,0);
                    
                    % Zout2
                    model_in_out{i}.Zout2=decomp_write_tf_vhdl(0,fid,i,'Zout2',model_in_out{i}.Num_Zout2,model_in_out{i}.Den_Zout2,0);
                    
                    % Zout_diff1
                    model_in_out{i}.Zout_diff1=decomp_write_tf_vhdl(0,fid,i,'Zout_diff1',model_in_out{i}.Num_Zout_diff1,model_in_out{i}.Den_Zout_diff1,0);
                    
                    % Zout_diff2
                    model_in_out{i}.Zout_diff2=decomp_write_tf_vhdl(0,fid,i,'Zout_diff2',model_in_out{i}.Num_Zout_diff2,model_in_out{i}.Den_Zout_diff2,0);
                    
                    
                elseif strcmp(vhdl_model_par.model_name, 'CCCS') % I in I out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD2
                    model_in_out{i}.TF_dir2=decomp_write_tf_vhdl(0,fid,i,'TF_dir2',model_in_out{i}.Num_TF_dir2,model_in_out{i}.Den_TF_dir2,0);
                    
                    % TFD3
                    model_in_out{i}.TF_dir3=decomp_write_tf_vhdl(0,fid,i,'TF_dir3',model_in_out{i}.Num_TF_dir3,model_in_out{i}.Den_TF_dir3,0);
                    
                    % TFD4
                    model_in_out{i}.TF_dir4=decomp_write_tf_vhdl(0,fid,i,'TF_dir4',model_in_out{i}.Num_TF_dir4,model_in_out{i}.Den_TF_dir4,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR2
                        model_in_out{i}.TF_inv2=decomp_write_tf_vhdl(0,fid,i,'TF_inv2',model_in_out{i}.Num_TF_inv2,model_in_out{i}.Den_TF_inv2,0);
                        
                        % TFR3
                        model_in_out{i}.TF_inv3=decomp_write_tf_vhdl(0,fid,i,'TF_inv3',model_in_out{i}.Num_TF_inv3,model_in_out{i}.Den_TF_inv3,0);
                        
                        % TFR4
                        model_in_out{i}.TF_inv4=decomp_write_tf_vhdl(0,fid,i,'TF_inv4',model_in_out{i}.Num_TF_inv4,model_in_out{i}.Den_TF_inv4,0);
                        
                    end
                    
                    % Zin1
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,0);
                    
                    % Zin2
                    model_in_out{i}.Zin2=decomp_write_tf_vhdl(0,fid,i,'Zin2',model_in_out{i}.Num_Zin2,model_in_out{i}.Den_Zin2,0);
                    
                    % Zin_diff1
                    model_in_out{i}.Zin_diff1=decomp_write_tf_vhdl(0,fid,i,'Zin_diff1',model_in_out{i}.Num_Zin_diff1,model_in_out{i}.Den_Zin_diff1,0);
                    
                    % Zin_diff2
                    model_in_out{i}.Zin_diff2=decomp_write_tf_vhdl(0,fid,i,'Zin_diff2',model_in_out{i}.Num_Zin_diff2,model_in_out{i}.Den_Zin_diff2,0);
                    
                    % Zout1
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,1);
                    
                    % Zout2
                    model_in_out{i}.Zout2=decomp_write_tf_vhdl(0,fid,i,'Zout2',model_in_out{i}.Num_Zout2,model_in_out{i}.Den_Zout2,1);
                    
                    % Zout_diff1
                    model_in_out{i}.Zout_diff1=decomp_write_tf_vhdl(0,fid,i,'Zout_diff1',model_in_out{i}.Num_Zout_diff1,model_in_out{i}.Den_Zout_diff1,1);
                    
                    % Zout_diff2
                    model_in_out{i}.Zout_diff2=decomp_write_tf_vhdl(0,fid,i,'Zout_diff2',model_in_out{i}.Num_Zout_diff2,model_in_out{i}.Den_Zout_diff2,1);
                    
                    
                elseif strcmp(vhdl_model_par.model_name, 'VCCS') % V in I out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD2
                    model_in_out{i}.TF_dir2=decomp_write_tf_vhdl(0,fid,i,'TF_dir2',model_in_out{i}.Num_TF_dir2,model_in_out{i}.Den_TF_dir2,0);
                    
                    % TFD3
                    model_in_out{i}.TF_dir3=decomp_write_tf_vhdl(0,fid,i,'TF_dir3',model_in_out{i}.Num_TF_dir3,model_in_out{i}.Den_TF_dir3,0);
                    
                    % TFD4
                    model_in_out{i}.TF_dir4=decomp_write_tf_vhdl(0,fid,i,'TF_dir4',model_in_out{i}.Num_TF_dir4,model_in_out{i}.Den_TF_dir4,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR2
                        model_in_out{i}.TF_inv2=decomp_write_tf_vhdl(0,fid,i,'TF_inv2',model_in_out{i}.Num_TF_inv2,model_in_out{i}.Den_TF_inv2,0);
                        
                        % TFR3
                        model_in_out{i}.TF_inv3=decomp_write_tf_vhdl(0,fid,i,'TF_inv3',model_in_out{i}.Num_TF_inv3,model_in_out{i}.Den_TF_inv3,0);
                        
                        % TFR4
                        model_in_out{i}.TF_inv4=decomp_write_tf_vhdl(0,fid,i,'TF_inv4',model_in_out{i}.Num_TF_inv4,model_in_out{i}.Den_TF_inv4,0);
                        
                    end
                    
                    % Zin1
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,1);
                    
                    % Zin2
                    model_in_out{i}.Zin2=decomp_write_tf_vhdl(0,fid,i,'Zin2',model_in_out{i}.Num_Zin2,model_in_out{i}.Den_Zin2,1);
                    
                    % Zin_diff1
                    model_in_out{i}.Zin_diff1=decomp_write_tf_vhdl(0,fid,i,'Zin_diff1',model_in_out{i}.Num_Zin_diff1,model_in_out{i}.Den_Zin_diff1,1);
                    
                    % Zin_diff2
                    model_in_out{i}.Zin_diff2=decomp_write_tf_vhdl(0,fid,i,'Zin_diff2',model_in_out{i}.Num_Zin_diff2,model_in_out{i}.Den_Zin_diff2,1);
                    
                    % Zout1
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,1);
                    
                    % Zout2
                    model_in_out{i}.Zout2=decomp_write_tf_vhdl(0,fid,i,'Zout2',model_in_out{i}.Num_Zout2,model_in_out{i}.Den_Zout2,1);
                    
                    % Zout_diff1
                    model_in_out{i}.Zout_diff1=decomp_write_tf_vhdl(0,fid,i,'Zout_diff1',model_in_out{i}.Num_Zout_diff1,model_in_out{i}.Den_Zout_diff1,1);
                    
                    % Zout_diff2
                    model_in_out{i}.Zout_diff2=decomp_write_tf_vhdl(0,fid,i,'Zout_diff2',model_in_out{i}.Num_Zout_diff2,model_in_out{i}.Den_Zout_diff2,1);
                    
                end
                
                % Offsets
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn11'],model_in_out{i}.OffIn11);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn12'],model_in_out{i}.OffIn12);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn21'],model_in_out{i}.OffIn21);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn22'],model_in_out{i}.OffIn22);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut11'],model_in_out{i}.OffOut11);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut12'],model_in_out{i}.OffOut12);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut21'],model_in_out{i}.OffOut21);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut22'],model_in_out{i}.OffOut22);
                
            end
            
            fprintf(fid, '%s\n',[ '  QUANTITY Vin1 ACROSS Iin1 THROUGH ' strrep(vhdl_model_par.in_Vname{1},'net_','') ' TO ground; ']);
            fprintf(fid, '%s\n',[ '  QUANTITY Vin2 ACROSS Iin2 THROUGH ' strrep(vhdl_model_par.in_Vname{2},'net_','') ' TO ground; ']);
            
            for i=1:no
                
                fprintf(fid, '%s\n',[ '  QUANTITY Vout1_' num2str(i) ' ACROSS Iout1_' num2str(i) ' THROUGH ' strrep(vhdl_model_par.out_Vname{2*i-1},'net_','') ' TO ground; ']);
                fprintf(fid, '%s\n',[ '  QUANTITY Vout2_' num2str(i) ' ACROSS Iout2_' num2str(i) ' THROUGH ' strrep(vhdl_model_par.out_Vname{2*i},'net_','') ' TO ground; ']);
                
            end
            
            if strcmp(vhdl_model_par.model_name, 'VCVS') % V in V out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaVin1, deltaVin2: voltage;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaIout1_' num2str(i) ', deltaIout2_' num2str(i) ': current;']);
                end
                
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaVin1 == Vin1 - Out_1_OffIn11;');
                fprintf(fid, '%s\n', '  deltaVin2 == Vin2 - Out_1_OffIn21;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  deltaIout1_' num2str(i) ' == Iout1_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                    fprintf(fid, '%s\n', ['  deltaIout2_' num2str(i) ' == Iout2_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut22;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Vout1_' num2str(i) ' == deltaVin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaVin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir3','Den_TF_dir3') '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout1','Den_Zout1') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout_diff2','Den_Zout_diff2') '+ Out_' num2str(i) '_' 'OffOut11;']);
                    fprintf(fid, '%s\n',[ '  Vout2_' num2str(i) '== deltaVin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir2','Den_TF_dir2') '+ deltaVin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir4','Den_TF_dir4') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout2','Den_Zout2') '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout_diff1','Den_Zout_diff1') '+ Out_' num2str(i) '_' 'OffOut21;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    
                    fprintf(fid, '%s',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff2','Num_Zin_diff2')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv2','Den_TF_inv2')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                    
                    fprintf(fid, '%s',[ '  Iin2 == deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin2','Num_Zin2') '+ deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff1','Num_Zin_diff1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv3','Den_TF_inv3') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv4','Den_TF_inv4')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn22;');
                    
                else
                    
                    fprintf(fid, '%s\n',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff2','Num_Zin_diff2') '+ Out_1_OffIn12;']);
                    fprintf(fid, '%s\n',[ '  Iin2 == deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin2','Num_Zin2') '+ deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff1','Num_Zin_diff1') '+ Out_1_OffIn22;']);
                    
                end
                
            elseif strcmp(vhdl_model_par.model_name, 'CCVS') % I in V out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaIin1, deltaIin2: current;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaIout1_' num2str(i) ', deltaIout2_' num2str(i) ': current;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaIin1 == Iin1 - Out_1_OffIn11;');
                fprintf(fid, '%s\n', '  deltaIin2 == Iin2 - Out_1_OffIn21;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  deltaIout1_' num2str(i) ' == Iout1_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                    fprintf(fid, '%s\n', ['  deltaIout2_' num2str(i) ' == Iout2_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut22;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Vout1_' num2str(i) ' == deltaIin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaIin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir3','Den_TF_dir3') '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout1','Den_Zout1') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout_diff2','Den_Zout_diff2') '+ Out_' num2str(i) '_' 'OffOut11;']);
                    fprintf(fid, '%s\n',[ '  Vout2_' num2str(i) ' == deltaIin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir2','Den_TF_dir2') '+ deltaIin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir4','Den_TF_dir4') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout2','Den_Zout2') '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout_diff1','Den_Zout_diff1') '+ Out_' num2str(i) '_' 'OffOut21;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    
                    fprintf(fid, '%s',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff2','Den_Zin_diff2')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{1},'Num_TF_inv1','Den_TF_inv1') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv2','Den_TF_inv2')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                    
                    fprintf(fid, '%s',[ '  Vin2 == deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin2','Den_Zin2') '+ deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff1','Den_Zin_diff1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{1},'Num_TF_inv3','Den_TF_inv3') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv4','Den_TF_inv4')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn22;');
                    
                else
                    
                    fprintf(fid, '%s\n',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff2','Den_Zin_diff2') '+ Out_1_OffIn12;']);
                    fprintf(fid, '%s\n',[ '  Vin2 == deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin2','Den_Zin2') '+ deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff1','Den_Zin_diff1') '+ Out_1_OffIn22;']);
                    
                end
                
            elseif strcmp(vhdl_model_par.model_name, 'CCCS') % I in I out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaIin1, deltaIin2: current;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaVout1_' num2str(i) ', deltaVout2_' num2str(i) ': voltage;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaIin1 == Iin1 - Out_1_OffIn11;');
                fprintf(fid, '%s\n', '  deltaIin2 == Iin2 - Out_1_OffIn21;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  deltaVout1_' num2str(i) ' == Vout1_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                    fprintf(fid, '%s\n', ['  deltaVout2_' num2str(i) ' == Vout2_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut22;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Iout1_' num2str(i) ' == deltaIin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaIin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir3','Den_TF_dir3') '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout1','Num_Zout1') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout_diff2','Num_Zout_diff2') '+ Out_' num2str(i) '_' 'OffOut11;']);
                    fprintf(fid, '%s\n',[ '  Iout2_' num2str(i) ' == deltaIin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir2','Den_TF_dir2') '+ deltaIin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir4','Den_TF_dir4') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout2','Num_Zout2') '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout_diff1','Num_Zout_diff1') '+ Out_' num2str(i) '_' 'OffOut21;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff2','Den_Zin_diff2')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',['+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv2','Den_TF_inv2')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                    
                    fprintf(fid, '%s',[ '  Vin2 == deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin2','Den_Zin2') '+ deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff1','Den_Zin_diff1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',['+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv3','Den_TF_inv3') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv4','Den_TF_inv4')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn22;');
                else
                    fprintf(fid, '%s\n',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff2','Den_Zin_diff2') '+ Out_1_OffIn12;']);
                    fprintf(fid, '%s\n',[ '  Vin2 == deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin2','Den_Zin2') '+ deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff1','Den_Zin_diff1') '+ Out_1_OffIn22;']);
                end
                
            elseif strcmp(vhdl_model_par.model_name, 'VCCS') % V in I out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaVin1, deltaVin2: voltage;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaVout1_' num2str(i) ', deltaVout2_' num2str(i) ': voltage;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaVin1 == Vin1 - Out_1_OffIn11;');
                fprintf(fid, '%s\n', '  deltaVin2 == Vin2 - Out_1_OffIn21;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  deltaVout1_' num2str(i) ' == Vout1_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                    fprintf(fid, '%s\n', ['  deltaVout2_' num2str(i) ' == Vout2_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut22;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Iout1_' num2str(i) ' == deltaVin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaVin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir3','Den_TF_dir3') '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout1','Num_Zout1') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout_diff2','Num_Zout_diff2') '+ Out_' num2str(i) '_' ' OffOut11;']);
                    fprintf(fid, '%s\n',[ '  Iout2_' num2str(i) ' == deltaVin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir2','Den_TF_dir2') '+ deltaVin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir4','Den_TF_dir4') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout2','Num_Zout2') '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout_diff1','Num_Zout_diff1') '+ Out_' num2str(i) '_' ' OffOut21;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    
                    fprintf(fid, '%s',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff2','Num_Zin_diff2')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv2','Den_TF_inv2')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                    
                    fprintf(fid, '%s',[ '  Iin2 == deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin2','Num_Zin2') '+ deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff1','Num_Zin_diff1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv3','Den_TF_inv3') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv4','Den_TF_inv4')]);
                    end
                    
                    fprintf(fid, '%s\n', '+ Out_1_OffIn22;');
                    
                else
                    
                    fprintf(fid, '%s\n',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff2','Num_Zin_diff2') '+ Out_1_OffIn12;']);
                    fprintf(fid, '%s\n',[ '  Iin2 == deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin2','Num_Zin2') '+ deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff1','Num_Zin_diff1') '+ Out_1_OffIn22;']);
                    
                end
            end
            
            fprintf(fid, '%s\n', '');
            fprintf(fid, '%s\n', 'END ARCHITECTURE behavioral;');
            fprintf(fid, '%s\n', '');
            
            
        else %IN diff OUT comm
            
            % Copy the parameters:
            
            for i=1:no
                
                if strcmp(vhdl_model_par.model_name, 'VCVS') % V in V out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD3
                    model_in_out{i}.TF_dir3=decomp_write_tf_vhdl(0,fid,i,'TF_dir3',model_in_out{i}.Num_TF_dir3,model_in_out{i}.Den_TF_dir3,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR3
                        model_in_out{i}.TF_inv3=decomp_write_tf_vhdl(0,fid,i,'TF_inv3',model_in_out{i}.Num_TF_inv3,model_in_out{i}.Den_TF_inv3,0);
                        
                    end
                    
                    % Zin1
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,1);
                    
                    % Zin2
                    model_in_out{i}.Zin2=decomp_write_tf_vhdl(0,fid,i,'Zin2',model_in_out{i}.Num_Zin2,model_in_out{i}.Den_Zin2,1);
                    
                    % Zin_diff1
                    model_in_out{i}.Zin_diff1=decomp_write_tf_vhdl(0,fid,i,'Zin_diff1',model_in_out{i}.Num_Zin_diff1,model_in_out{i}.Den_Zin_diff1,1);
                    
                    % Zin_diff2
                    model_in_out{i}.Zin_diff2=decomp_write_tf_vhdl(0,fid,i,'Zin_diff2',model_in_out{i}.Num_Zin_diff2,model_in_out{i}.Den_Zin_diff2,1);
                    
                    % Zout
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,0);
                    
                elseif strcmp(vhdl_model_par.model_name, 'CCVS') % I in V out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD3
                    model_in_out{i}.TF_dir3=decomp_write_tf_vhdl(0,fid,i,'TF_dir3',model_in_out{i}.Num_TF_dir3,model_in_out{i}.Den_TF_dir3,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR3
                        model_in_out{i}.TF_inv3=decomp_write_tf_vhdl(0,fid,i,'TF_inv3',model_in_out{i}.Num_TF_inv3,model_in_out{i}.Den_TF_inv3,0);
                        
                    end
                    
                    % Zin1
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,0);
                    
                    % Zin2
                    model_in_out{i}.Zin2=decomp_write_tf_vhdl(0,fid,i,'Zin2',model_in_out{i}.Num_Zin2,model_in_out{i}.Den_Zin2,0);
                    
                    % Zin_diff1
                    model_in_out{i}.Zin_diff1=decomp_write_tf_vhdl(0,fid,i,'Zin_diff1',model_in_out{i}.Num_Zin_diff1,model_in_out{i}.Den_Zin_diff1,0);
                    
                    % Zin_diff2
                    model_in_out{i}.Zin_diff2=decomp_write_tf_vhdl(0,fid,i,'Zin_diff2',model_in_out{i}.Num_Zin_diff2,model_in_out{i}.Den_Zin_diff2,0);
                    
                    % Zout
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,0);
                    
                elseif strcmp(vhdl_model_par.model_name, 'CCCS') % I in I out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD3
                    model_in_out{i}.TF_dir3=decomp_write_tf_vhdl(0,fid,i,'TF_dir3',model_in_out{i}.Num_TF_dir3,model_in_out{i}.Den_TF_dir3,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR3
                        model_in_out{i}.TF_inv3=decomp_write_tf_vhdl(0,fid,i,'TF_inv3',model_in_out{i}.Num_TF_inv3,model_in_out{i}.Den_TF_inv3,0);
                        
                    end
                    
                    % Zin1
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,0);
                    
                    % Zin2
                    model_in_out{i}.Zin2=decomp_write_tf_vhdl(0,fid,i,'Zin2',model_in_out{i}.Num_Zin2,model_in_out{i}.Den_Zin2,0);
                    
                    % Zin_diff1
                    model_in_out{i}.Zin_diff1=decomp_write_tf_vhdl(0,fid,i,'Zin_diff1',model_in_out{i}.Num_Zin_diff1,model_in_out{i}.Den_Zin_diff1,0);
                    
                    % Zin_diff2
                    model_in_out{i}.Zin_diff2=decomp_write_tf_vhdl(0,fid,i,'Zin_diff2',model_in_out{i}.Num_Zin_diff2,model_in_out{i}.Den_Zin_diff2,0);
                    
                    % Zout
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,1);
                    
                elseif strcmp(vhdl_model_par.model_name, 'VCCS') % V in I out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD3
                    model_in_out{i}.TF_dir3=decomp_write_tf_vhdl(0,fid,i,'TF_dir3',model_in_out{i}.Num_TF_dir3,model_in_out{i}.Den_TF_dir3,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR3
                        model_in_out{i}.TF_inv3=decomp_write_tf_vhdl(0,fid,i,'TF_inv3',model_in_out{i}.Num_TF_inv3,model_in_out{i}.Den_TF_inv3,0);
                        
                    end
                    
                    % Zin1
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,1);
                    
                    % Zin2
                    model_in_out{i}.Zin2=decomp_write_tf_vhdl(0,fid,i,'Zin2',model_in_out{i}.Num_Zin2,model_in_out{i}.Den_Zin2,1);
                    
                    % Zin_diff1
                    model_in_out{i}.Zin_diff1=decomp_write_tf_vhdl(0,fid,i,'Zin_diff1',model_in_out{i}.Num_Zin_diff1,model_in_out{i}.Den_Zin_diff1,1);
                    
                    % Zin_diff2
                    model_in_out{i}.Zin_diff2=decomp_write_tf_vhdl(0,fid,i,'Zin_diff2',model_in_out{i}.Num_Zin_diff2,model_in_out{i}.Den_Zin_diff2,1);
                    
                    % Zout
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,1);
                    
                end
                
                % Offsets
                
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn11'],model_in_out{i}.OffIn11);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn12'],model_in_out{i}.OffIn12);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn21'],model_in_out{i}.OffIn21);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn22'],model_in_out{i}.OffIn22);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut11'],model_in_out{i}.OffOut11);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut12'],model_in_out{i}.OffOut12);
                
            end
            
            fprintf(fid, '%s\n',[ '  QUANTITY Vin1 ACROSS Iin1 THROUGH ' strrep(vhdl_model_par.in_Vname{1},'net_','') ' TO ground; ']);
            fprintf(fid, '%s\n',[ '  QUANTITY Vin2 ACROSS Iin2 THROUGH ' strrep(vhdl_model_par.in_Vname{2},'net_','') ' TO ground; ']);
            
            for i=1:no
                
                fprintf(fid, '%s\n',[ '  QUANTITY Vout1_' num2str(i) ' ACROSS Iout1_' num2str(i) ' THROUGH ' strrep(vhdl_model_par.out_Vname{2*i-1},'net_','') ' TO ground; ']);
                
            end
            
            % Models
            if strcmp(vhdl_model_par.model_name, 'VCVS') % V in V out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaVin1, deltaVin2: voltage;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaIout1_' num2str(i) ': current;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaVin1 == Vin1 - Out_1_OffIn11;');
                fprintf(fid, '%s\n', '  deltaVin2 == Vin2 - Out_1_OffIn21;');
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  deltaIout1_' num2str(i) ' == Iout1_' num2str(i) ' - Out_' num2str(i) '_'  'OffOut12;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Vout1_' num2str(i) ' == deltaVin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaVin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir3','Den_TF_dir3') '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout1','Den_Zout1') '+ Out_' num2str(i) '_' 'OffOut11;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    
                    fprintf(fid, '%s',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff2','Num_Zin_diff2')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                    
                    
                    fprintf(fid, '%s',[ '  Iin2 == deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin2','Num_Zin2') '+ deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff1','Num_Zin_diff1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv3','Den_TF_inv3')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn22;');
                    
                else
                    fprintf(fid, '%s\n',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff2','Num_Zin_diff2') '+ Out_1_OffIn12;']);
                    fprintf(fid, '%s\n',[ '  Iin2 == deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin2','Num_Zin2') '+ deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff1','Num_Zin_diff1') '+ Out_1_OffIn22;']);
                end
                
                
            elseif strcmp(vhdl_model_par.model_name, 'CCVS') % I in V out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaIin1, deltaIin2: current;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaIout1_' num2str(i) ': current;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaIin1 == Iin1 - Out_1_OffIn11;');
                fprintf(fid, '%s\n', '  deltaIin2 == Iin2 - Out_1_OffIn21;');
                
                for i=1:no
                    fprintf(fid, '%s\n',['  deltaIout1_' num2str(i) ' == Iout1_' num2str(i) ' - Out_' num2str(i) '_'  'OffOut12;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Vout1_' num2str(i) ' == deltaIin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaIin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir3','Den_TF_dir3') '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout1','Den_Zout1') '+ Out_' num2str(i) '_'  'OffOut11;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff2','Den_Zin_diff2')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                    
                    fprintf(fid, '%s\n',[ '  Vin2 == deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin2','Den_Zin2') '+ deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff1','Den_Zin_diff1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv3','Den_TF_inv3')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn22;');
                else
                    fprintf(fid, '%s\n',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff2','Den_Zin_diff2') '+ Out_1_OffIn12;']);
                    fprintf(fid, '%s\n',[ '  Vin2 == deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin2','Den_Zin2') '+ deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff1','Den_Zin_diff1') '+ Out_1_OffIn22;']);
                end
                
            elseif strcmp(vhdl_model_par.model_name, 'CCCS') % I in I out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaIin1, deltaIin2: current;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaVout1_' num2str(i) ': voltage;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaIin1 == Iin1 - Out_1_OffIn11;');
                fprintf(fid, '%s\n', '  deltaIin2 == Iin2 - Out_1_OffIn21;');
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  deltaVout1_' num2str(i) ' == Vout1_' num2str(i) ' - Out_' num2str(i) '_'  'OffOut12;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Iout1_' num2str(i) ' == deltaIin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaIin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir3','Den_TF_dir3') '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout1','Num_Zout1') '+ Out_' num2str(i) '_'  'OffOut11;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    
                    fprintf(fid, '%s',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff2','Den_Zin_diff2')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                    
                    fprintf(fid, '%s',[ '  Vin2 == deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin2','Den_Zin2') '+ deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff1','Den_Zin_diff1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',['+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv3','Den_TF_inv3')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn22;');
                    
                else
                    fprintf(fid, '%s\n',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff2','Den_Zin_diff2') '+ Out_1_OffIn12;']);
                    fprintf(fid, '%s\n',[ '  Vin2 == deltaIin2' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin2','Den_Zin2') '+ deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin_diff1','Den_Zin_diff1') '+ Out_1_OffIn22;']);
                end
                
            elseif strcmp(vhdl_model_par.model_name, 'VCCS') % V in I out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaVin1, deltaVin2: voltage;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaVout1_' num2str(i) ': voltage;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaVin1 == Vin1 - Out_1_OffIn11;');
                fprintf(fid, '%s\n', '  deltaVin2 == Vin2 - Out_1_OffIn21;');
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  deltaVout1_' num2str(i) ' == Vout1_' num2str(i) ' - Out_' num2str(i) '_'  'OffOut12;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Iout1_' num2str(i) ' == deltaVin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaVin2' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir3','Den_TF_dir3') '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout1','Num_Zout1') '+ Out_' num2str(i) '_'  'OffOut11;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff2','Num_Zin_diff2')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',['+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                    
                    fprintf(fid, '%s',[ '  Iin2 == deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin2','Num_Zin2') '+ deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff1','Num_Zin_diff1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',['+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv3','Den_TF_inv3')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn22;');
                else
                    fprintf(fid, '%s\n',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff2','Num_Zin_diff2') '+ Out_1_OffIn12;']);
                    fprintf(fid, '%s\n',[ '  Iin2 == deltaVin2' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin2','Num_Zin2') '+ deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin_diff1','Num_Zin_diff1') '+ Out_1_OffIn22;']);
                end
            end
            
            fprintf(fid, '%s\n', '');
            fprintf(fid, '%s\n', 'END ARCHITECTURE behavioral;');
            fprintf(fid, '%s\n', '');
            
        end
        
    else
        if vhdl_model_par.mode_diff_enabled_out %IN comm OUT diff
            
            % Copy the parameters:
            
            for i=1:no
                
                if strcmp(vhdl_model_par.model_name, 'VCVS') % V in V out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD2
                    model_in_out{i}.TF_dir2=decomp_write_tf_vhdl(0,fid,i,'TF_dir2',model_in_out{i}.Num_TF_dir2,model_in_out{i}.Den_TF_dir2,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR2
                        model_in_out{i}.TF_inv2=decomp_write_tf_vhdl(0,fid,i,'TF_inv2',model_in_out{i}.Num_TF_inv2,model_in_out{i}.Den_TF_inv2,0);
                        
                    end
                    
                    % Zin
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,1);
                    
                    % Zout1
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,0);
                    
                    % Zout2
                    model_in_out{i}.Zout2=decomp_write_tf_vhdl(0,fid,i,'Zout2',model_in_out{i}.Num_Zout2,model_in_out{i}.Den_Zout2,0);
                    
                    % Zout_diff1
                    model_in_out{i}.Zout_diff1=decomp_write_tf_vhdl(0,fid,i,'Zout_diff1',model_in_out{i}.Num_Zout_diff1,model_in_out{i}.Den_Zout_diff1,0);
                    
                    % Zout_diff2
                    model_in_out{i}.Zout_diff2=decomp_write_tf_vhdl(0,fid,i,'Zout_diff2',model_in_out{i}.Num_Zout_diff2,model_in_out{i}.Den_Zout_diff2,0);
                    
                elseif strcmp(vhdl_model_par.model_name, 'CCVS') % I in V out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD2
                    model_in_out{i}.TF_dir2=decomp_write_tf_vhdl(0,fid,i,'TF_dir2',model_in_out{i}.Num_TF_dir2,model_in_out{i}.Den_TF_dir2,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR2
                        model_in_out{i}.TF_inv2=decomp_write_tf_vhdl(0,fid,i,'TF_inv2',model_in_out{i}.Num_TF_inv2,model_in_out{i}.Den_TF_inv2,0);
                        
                    end
                    
                    % Zin
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,0);
                    
                    % Zout1
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,0);
                    
                    % Zout2
                    model_in_out{i}.Zout2=decomp_write_tf_vhdl(0,fid,i,'Zout2',model_in_out{i}.Num_Zout2,model_in_out{i}.Den_Zout2,0);
                    
                    % Zout_diff1
                    model_in_out{i}.Zout_diff1=decomp_write_tf_vhdl(0,fid,i,'Zout_diff1',model_in_out{i}.Num_Zout_diff1,model_in_out{i}.Den_Zout_diff1,0);
                    
                    % Zout_diff2
                    model_in_out{i}.Zout_diff2=decomp_write_tf_vhdl(0,fid,i,'Zout_diff2',model_in_out{i}.Num_Zout_diff2,model_in_out{i}.Den_Zout_diff2,0);
                    
                elseif strcmp(vhdl_model_par.model_name, 'CCCS') % I in I out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD2
                    model_in_out{i}.TF_dir2=decomp_write_tf_vhdl(0,fid,i,'TF_dir2',model_in_out{i}.Num_TF_dir2,model_in_out{i}.Den_TF_dir2,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR2
                        model_in_out{i}.TF_inv2=decomp_write_tf_vhdl(0,fid,i,'TF_inv2',model_in_out{i}.Num_TF_inv2,model_in_out{i}.Den_TF_inv2,0);
                        
                    end
                    
                    % Zin
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,0);
                    
                    % Zout1
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,1);
                    
                    % Zout2
                    model_in_out{i}.Zout2=decomp_write_tf_vhdl(0,fid,i,'Zout2',model_in_out{i}.Num_Zout2,model_in_out{i}.Den_Zout2,1);
                    
                    % Zout_diff1
                    model_in_out{i}.Zout_diff1=decomp_write_tf_vhdl(0,fid,i,'Zout_diff1',model_in_out{i}.Num_Zout_diff1,model_in_out{i}.Den_Zout_diff1,1);
                    
                    % Zout_diff2
                    model_in_out{i}.Zout_diff2=decomp_write_tf_vhdl(0,fid,i,'Zout_diff2',model_in_out{i}.Num_Zout_diff2,model_in_out{i}.Den_Zout_diff2,1);
                    
                elseif strcmp(vhdl_model_par.model_name, 'VCCS') % V in I out verified
                    
                    % TFD1
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    % TFD2
                    model_in_out{i}.TF_dir2=decomp_write_tf_vhdl(0,fid,i,'TF_dir2',model_in_out{i}.Num_TF_dir2,model_in_out{i}.Den_TF_dir2,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR1
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                        % TFR2
                        model_in_out{i}.TF_inv2=decomp_write_tf_vhdl(0,fid,i,'TF_inv2',model_in_out{i}.Num_TF_inv2,model_in_out{i}.Den_TF_inv2,0);
                        
                    end
                    
                    % Zin
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,1);
                    
                    % Zout1
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,1);
                    
                    % Zout2
                    model_in_out{i}.Zout2=decomp_write_tf_vhdl(0,fid,i,'Zout2',model_in_out{i}.Num_Zout2,model_in_out{i}.Den_Zout2,1);
                    
                    % Zout_diff1
                    model_in_out{i}.Zout_diff1=decomp_write_tf_vhdl(0,fid,i,'Zout_diff1',model_in_out{i}.Num_Zout_diff1,model_in_out{i}.Den_Zout_diff1,1);
                    
                    % Zout_diff2
                    model_in_out{i}.Zout_diff2=decomp_write_tf_vhdl(0,fid,i,'Zout_diff2',model_in_out{i}.Num_Zout_diff2,model_in_out{i}.Den_Zout_diff2,1);
                    
                end
                
                % Offsets
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn11'],model_in_out{i}.OffIn11);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn12'],model_in_out{i}.OffIn12);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut11'],model_in_out{i}.OffOut11);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut12'],model_in_out{i}.OffOut12);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut21'],model_in_out{i}.OffOut21);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut22'],model_in_out{i}.OffOut22);
                
            end
            
            fprintf(fid, '%s\n',[ '  QUANTITY Vin1 ACROSS Iin1 THROUGH ' strrep(vhdl_model_par.in_Vname{1},'net_','') ' TO ground; ']);
            
            for i=1:no
                
                fprintf(fid, '%s\n',[ '  QUANTITY Vout1_' num2str(i) ' ACROSS Iout1_' num2str(i) ' THROUGH ' strrep(vhdl_model_par.out_Vname{2*i-1},'net_','') ' TO ground; ']);
                fprintf(fid, '%s\n',[ '  QUANTITY Vout2_' num2str(i) ' ACROSS Iout2_' num2str(i) ' THROUGH ' strrep(vhdl_model_par.out_Vname{2*i},'net_','') ' TO ground; ']);
                
            end
            
            % Models
            if strcmp(vhdl_model_par.model_name, 'VCVS') % V in V out verified
                fprintf(fid, '%s\n', '  QUANTITY deltaVin1: voltage;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaIout1_' num2str(i) ', deltaIout2_' num2str(i) ': current;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaVin1 == Vin1 - Out_1_OffIn11;');
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  deltaIout1_' num2str(i) ' == Iout1_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                    fprintf(fid, '%s\n',[ '  deltaIout2_' num2str(i) ' == Iout2_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut22;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Vout1_' num2str(i) ' == deltaVin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout1','Den_Zout1') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout_diff2','Den_Zout_diff2') '+ Out_' num2str(i) '_' 'OffOut11;']);
                    fprintf(fid, '%s\n',[ '  Vout2_' num2str(i) ' == deltaVin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir2','Den_TF_dir2') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout2','Den_Zout2') '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout_diff1','Den_Zout_diff1') '+ Out_' num2str(i) '_' 'OffOut21;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv2','Den_TF_inv2')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                    
                else
                    fprintf(fid, '%s\n',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ Out_1_OffIn12;']);
                end
                
            elseif strcmp(vhdl_model_par.model_name, 'CCVS') % I in V out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaIin1: current;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaIout1_' num2str(i) ', deltaIout2_' num2str(i) ': current;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaIin1 == Iin1 - Out_1_OffIn11;');
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  deltaIout1_' num2str(i) ' == Iout1_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                    fprintf(fid, '%s\n',[ '  deltaIout2_' num2str(i) ' == Iout2_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut22;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Vout1_' num2str(i) ' == deltaIin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout1','Den_Zout1') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout_diff2','Den_Zout_diff2') '+ Out_' num2str(i) '_' 'OffOut11;']);
                    fprintf(fid, '%s\n',[ '  Vout2_' num2str(i) ' == deltaIin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir2','Den_TF_dir2') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout2','Den_Zout2') '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout_diff1','Den_Zout_diff1') '+ Out_' num2str(i) '_' 'OffOut21;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1') '+ deltaIout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv2','Den_TF_inv2')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                else
                    fprintf(fid, '%s\n',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ Out_1_OffIn12;']);
                end
                
            elseif strcmp(vhdl_model_par.model_name, 'CCCS') % I in I out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaIin1: current;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaVout1_' num2str(i) ', deltaVout2_' num2str(i) ': voltage;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaIin1 == Iin1 - Out_1_OffIn11;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  deltaVout1_' num2str(i) ' == Vout1_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                    fprintf(fid, '%s\n', ['  deltaVout2_' num2str(i) ' == Vout2_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut22;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Iout1_' num2str(i) ' == deltaIin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout1','Num_Zout1') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout_diff2','Num_Zout_diff2') '+ Out_' num2str(i) '_' 'OffOut11;']);
                    fprintf(fid, '%s\n',[ '  Iout2_' num2str(i) ' == deltaIin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir2','Den_TF_dir2') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout2','Num_Zout2') '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout_diff1','Num_Zout_diff1') '+ Out_' num2str(i) '_' 'OffOut21;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',['+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv2','Den_TF_inv2')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                else
                    fprintf(fid, '%s\n',[ '  Vin1 == deltaIin1' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ Out_1_OffIn12;']);
                end
            elseif strcmp(vhdl_model_par.model_name, 'VCCS') % V in I out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaVin1: voltage;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaVout1_' num2str(i) ', deltaVout2_' num2str(i) ': voltage;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaVin1 == Vin1 - Out_1_OffIn11;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  deltaVout1_' num2str(i) ' == Vout1_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                    fprintf(fid, '%s\n', ['  deltaVout2_' num2str(i) ' == Vout2_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut22;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Iout1_' num2str(i) ' == deltaVin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout1','Num_Zout1') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout_diff2','Num_Zout_diff2') '+ Out_' num2str(i) '_' 'OffOut11;']);
                    fprintf(fid, '%s\n',[ '  Iout2_' num2str(i) ' == deltaVin1' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir2','Den_TF_dir2') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout2','Num_Zout2') '+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout_diff1','Num_Zout_diff1') '+ Out_' num2str(i) '_' 'OffOut21;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1')]);
                    for i=1:no
                        fprintf(fid, '%s',['+ deltaVout1_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1') '+ deltaVout2_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv2','Den_TF_inv2')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                else
                    fprintf(fid, '%s\n',[ '  Iin1 == deltaVin1' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ Out_1_OffIn12;']);
                end
            end
            
            fprintf(fid, '%s\n', '');
            fprintf(fid, '%s\n', 'END ARCHITECTURE behavioral;');
            fprintf(fid, '%s\n', '');
            
        else %IN comm OUT comm
            
            % Copy the parameters:
            
            for i=1:no
                
                if strcmp(vhdl_model_par.model_name, 'VCVS') % V in V out verified
                    
                    % TFD
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                    end
                    
                    % Zin
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,1);
                    
                    % Zout
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,0);
                    
                elseif strcmp(vhdl_model_par.model_name, 'CCVS') % I in V out verified
                    % TFD
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                    end
                    
                    % Zin
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,0);
                    
                    % Zout
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,0);
                    
                elseif strcmp(vhdl_model_par.model_name, 'CCCS') % I in I out verified
                    % TFD
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                    end
                    
                    % Zin
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,0);
                    
                    % Zout
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,1);
                    
                elseif strcmp(vhdl_model_par.model_name, 'VCCS') % V in I out verified
                    % TFD
                    model_in_out{i}.TF_dir1=decomp_write_tf_vhdl(0,fid,i,'TF_dir1',model_in_out{i}.Num_TF_dir1,model_in_out{i}.Den_TF_dir1,0);
                    
                    if vhdl_model_par.rev_trfunction
                        
                        % TFR
                        model_in_out{i}.TF_inv1=decomp_write_tf_vhdl(0,fid,i,'TF_inv1',model_in_out{i}.Num_TF_inv1,model_in_out{i}.Den_TF_inv1,0);
                        
                    end
                    
                    % Zin
                    model_in_out{i}.Zin1=decomp_write_tf_vhdl(0,fid,i,'Zin1',model_in_out{i}.Num_Zin1,model_in_out{i}.Den_Zin1,1);
                    
                    % Zout
                    model_in_out{i}.Zout1=decomp_write_tf_vhdl(0,fid,i,'Zout1',model_in_out{i}.Num_Zout1,model_in_out{i}.Den_Zout1,1);
                end
                
                % Offsets
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn11'],model_in_out{i}.OffIn11);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffIn12'],model_in_out{i}.OffIn12);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut11'],model_in_out{i}.OffOut11);
                write_vhdl_real(fid, ['Out_' num2str(i) '_' 'OffOut12'],model_in_out{i}.OffOut12);
                
            end
            
            fprintf(fid, '%s\n',[ '  QUANTITY Vin_1 ACROSS Iin_1 THROUGH ' strrep(vhdl_model_par.in_Vname{1},'net_','') ' TO ground; ']);
            
            for i=1:no
                
                fprintf(fid, '%s\n',[ '  QUANTITY Vout_' num2str(i) ' ACROSS Iout_' num2str(i) ' THROUGH ' strrep(vhdl_model_par.out_Vname{2*i-1},'net_','') ' TO ground; ']);
                
            end
            
            % Models
            if strcmp(vhdl_model_par.model_name, 'VCVS') % V in V out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaVin: voltage;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaIout_' num2str(i) ': current;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaVin == Vin_1 - Out_1_OffIn11;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  deltaIout_' num2str(i) ' == Iout_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Vout_' num2str(i) ' == deltaVin' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaIout_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout1','Den_Zout1') '+ Out_' num2str(i) '_' 'OffOut11;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Iin_1 == deltaVin' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                else
                    fprintf(fid, '%s\n',[ '  Iin_1 == deltaVin' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ Out_1_OffIn12;']);
                end
                
            elseif strcmp(vhdl_model_par.model_name, 'CCVS') % I in V out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaIin: current;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaIout_' num2str(i) ': current;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaIin == Iin_1 - Out_1_OffIn11;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  deltaIout_' num2str(i) ' == Iout_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Vout_' num2str(i) ' == deltaIin' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaIout_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_Zout1','Den_Zout1') '+ Out_' num2str(i) '_' 'OffOut11;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Vin_1 == deltaIin' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaIout_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                else
                    fprintf(fid, '%s\n',[ '  Vin_1 == deltaIin' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ Out_1_OffIn12;']);
                end
                
            elseif strcmp(vhdl_model_par.model_name, 'CCCS') % I in I out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaIin: current;');
                fprintf(fid, '%s\n', '  QUANTITY deltaVout: voltage;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaVout_' num2str(i) ': voltage;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaIin == Iin_1 - Out_1_OffIn11;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  deltaVout_' num2str(i) ' == Vout_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Iout_' num2str(i) ' == deltaIin' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaVout_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout1','Num_Zout1') '+ Out_' num2str(i) '_' 'OffOut11;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Vin_1 == deltaIin' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaVout_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                else
                    fprintf(fid, '%s\n',[ '  Vin_1 == deltaIin' vhdl_tr_decomp(0,1,model_in_out{1},'Num_Zin1','Den_Zin1') '+ Out_1_OffIn12;']);
                end
                
            elseif strcmp(vhdl_model_par.model_name, 'VCCS') % V in I out verified
                
                fprintf(fid, '%s\n', '  QUANTITY deltaVin: voltage;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  QUANTITY deltaVout_' num2str(i) ': voltage;']);
                end
                
                fprintf(fid, '%s\n', '');
                fprintf(fid, '%s\n', 'BEGIN');
                fprintf(fid, '%s\n', '');
                
                fprintf(fid, '%s\n', '  deltaVin == Vin_1 - Out_1_OffIn11;');
                
                for i=1:no
                    fprintf(fid, '%s\n', ['  deltaVout_' num2str(i) ' == Vout_' num2str(i) ' - Out_' num2str(i) '_' 'OffOut12;']);
                end
                
                for i=1:no
                    fprintf(fid, '%s\n',[ '  Iout_' num2str(i) ' == deltaVin' vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_dir1','Den_TF_dir1') '+ deltaVout_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Den_Zout1','Num_Zout1') '+ Out_' num2str(i) '_' 'OffOut11;']);
                end
                
                if vhdl_model_par.rev_trfunction
                    fprintf(fid, '%s',[ '  Iin_1 == deltaVin' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1')]);
                    
                    for i=1:no
                        fprintf(fid, '%s',[ '+ deltaVout_' num2str(i) vhdl_tr_decomp(0,i,model_in_out{i},'Num_TF_inv1','Den_TF_inv1')]);
                    end
                    
                    fprintf(fid, '%s\n','+ Out_1_OffIn12;');
                else
                    fprintf(fid, '%s\n',[ '  Iin_1 == deltaVin' vhdl_tr_decomp(0,1,model_in_out{1},'Den_Zin1','Num_Zin1') '+ Out_1_OffIn12;']);
                end
            end
            
            fprintf(fid, '%s\n', '');
            fprintf(fid, '%s\n', 'END ARCHITECTURE behavioral;');
            fprintf(fid, '%s\n', '');
            
        end
        
    end
    
end

fclose(fid);

msgbox('Successfuly exported SMASH VHDL-AMS model!','Export','help');
edit(filepath_vhd);

end
